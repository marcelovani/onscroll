<?php
/**
 * @file
 *   Main module file for onscroll
 */
define('ONSCROLL_URL', 'http://cdn.onscroll.com/onscroll.ms.js');
define('ONSCROLL_PLACEHOLDER', '<!-- OnScrollPlaceholder_[delta]-->');

/**
 * Implements hook_permission().
 */
function onscroll_permission() {
  return array(
    'administer onscroll' => array(
      'title' => t('Administer onscroll'),
      'description' => t('Administer account settings and visibility of onscroll on your site.'),
    ),
  );
}

/**
 * Implements hook_process_html().
 */
function onscroll_process_html(&$variables) {
  //@todo Modify this to get it working.
//  if (strstr($variables['page'], ONSCROLL_PLACEHOLDER) !== FALSE) {
    $js_array = _onscroll_get_js();
    foreach ($js_array as $delta => $js_item){
      var_dump(str_replace('[delta]',$delta,ONSCROLL_PLACEHOLDER ));
      $variables['page'] = str_replace(str_replace('[delta]',$delta,ONSCROLL_PLACEHOLDER ), $js_item, $variables['page']);
    }
//  }
}

/**
 * Implementation of hook_help().
 */
function onscroll_help($path, $arg) {
  switch ($path) {
    case 'admin/config/system/onscroll':
      return t('<a href="@url">OnScroll</a> determines the most appropriate time to deliver a viewable ad based on user behaviour.', array('@url' => 'http://www.onscroll.com/'));
  }
}

/**
 * Get the onscroll block content.
 */
function _onscroll_get_js() {
  if (!path_is_admin(current_path())) {
    // Add inline script.
    $ad_slot = '';
    $onscroll_content = array();
    $tags = onscroll_tags_load_all();

    foreach ($tags as $onscroll_tag) {

      if ($onscroll_tag->slot == 'custom' && $onscroll_tag->enabled) {
        $onscroll_tag += array($onscroll_tag->code);
      }
      elseif (module_exists('dfp')) {
        // Render the tag first so that the JS is available in drupal_add_js().
        $tag = dfp_tag($onscroll_tag->slot);

        $rendered_tag = render($tag);
        $ad_slot .= '<script type="text/javascript" src="http://www.googletagservices.com/tag/js/gpt.js"></script>' . PHP_EOL;
        $pieces = array(
          'var googletag\s*=\s*googletag\s.',
          'googletag\.slots\[\"' . $onscroll_tag->slot . '\"\]\s*=\s*googletag\.defineSlot\(',
          'googletag\.enableServices\(',
        );
        $pattern = '/' . implode('|', $pieces) . '/';

        // Check for needed JavaScript respecting the key order from $pieces.
        foreach (drupal_add_js() as $key => $value) {
          if (is_numeric($key) && strstr($value['data'], 'googletag')) {
            if (!preg_match($pattern, $value['data'])) {
              continue;
            }
            // Loop again to order the slots.
            foreach ($pieces as $key => $individual_pattern) {
              // Add only dfp and onscroll related gpt code.
              if (preg_match('/' . $individual_pattern . '/', $value['data'])) {
                $matched_ad_slots[$key] = $value['data'];
                break 1;
              }
            }
          }
        }

        // Sort the array and append values as separate script.
        ksort($matched_ad_slots);
        foreach ($matched_ad_slots as $ad_slot_value) {
          $ad_slot .= '<script type="text/javascript">' . $ad_slot_value . '</script>' . PHP_EOL;
        }

        $ad_slot .= $rendered_tag;

        // Load the ads even if "initial ad load" from dfp module
        // is disabled in order get response from onscroll.com .
        if (variable_get('dfp_disable_init_load', 1)) {
          $ad_slot = str_ireplace('googletag.pubads().disableInitialLoad();', '', $ad_slot);
        }
      }
      $ad_slot .= '<script src="http://cdn.onscroll.com/ms.os.js"></script>';

      $tag_placeholder = 'onscroll_' . $onscroll_tag->machinename . '_container';
      // Add onscroll configuration.
      $script = '<script type="text/javascript">' . PHP_EOL;
      $script .= 'var onScrOll=new Object();' . PHP_EOL;
      $script .= 'onScrOll.placeholder="' . $tag_placeholder . '";' . PHP_EOL;
      $script .= 'onScrOll.code="' . base64_encode($ad_slot) . '";' . PHP_EOL;
      $script .= 'onScrOll.margin=' . $onscroll_tag->margin . ';' . PHP_EOL;
      $script .= 'onScrOll.marginTop=' . $onscroll_tag->margin_top . ';' . PHP_EOL;
      $script .= 'onScrOll.mode="' . $onscroll_tag->mode . '";' . PHP_EOL;
      $script .= 'onScrOll.height=' . $onscroll_tag->height . ';' . PHP_EOL;
      $script .= 'onScrOll.width=' . $onscroll_tag->width . ';' . PHP_EOL;
      $script .= 'onScrOll.reload=' . (($onscroll_tag->reload == FALSE) ? 'false' : 'true') . ';' . PHP_EOL;
      $script .= 'onScrOll.campaignId="' . $onscroll_tag->campaign_id . '";' . PHP_EOL;
      $script .= 'onScrOll.creativeId="' . $onscroll_tag->creative_id . '";' . PHP_EOL;
      $script .= 'onScrOll.accountId="' . $onscroll_tag->account_id . '";' . PHP_EOL;
      $script .= '</script>';
      $onscroll_content[$tag_placeholder] = $script;

      // Add external script.
      $script = '<script type="text/javascript" src="';
      $script .= $onscroll_tag->url;
      $script .= '"></script>';
      $onscroll_content[$tag_placeholder] .= $script;
    }

    //return implode($onscroll_content);
    return $onscroll_content;
  }
}

/**
 * Implements hook_block_info().
 */
function onscroll_block_info() {
  $tags = onscroll_tags_load_all();
  $blocks = array();
  $hashes = array();

  foreach ($tags as $tag) {
    if ($tag->enabled) {
      // The block table chokes when the delta is more than 32 characters. To
      // solve this we create a hash of the machine name when needed.
      $delta = 'onscroll_' .  $tag->machinename;
      //$delta =  $tag->machinename;
      if (drupal_strlen($delta) >= 32) {
        $delta = md5($delta);
        $hashes[$delta] = $delta;
      }
      $blocks[$delta]['info'] = t('Onscroll tag: @slotname', array('@slotname' => $tag->slot));
      $blocks[$delta]['cache'] = DRUPAL_NO_CACHE;
    }
  }
  // Only save hashes if they have changed.
  $old_hashes = variable_get('onscroll_block_hashes', array());
  if ($hashes != $old_hashes) {
    variable_set('onscroll_block_hashes', $hashes);
  }
  return $blocks;
}

/**
 * Load all onscroll ad tags.
 *
 * @param bool|FALSE $include_disabled
 * @return array
 */
function onscroll_tags_load_all($include_disabled = FALSE) {
  ctools_include('export');

  $tags = ctools_export_crud_load_all('onscroll_tags');
  foreach ($tags as $key => $tag) {
    if (!$include_disabled && !isset($tag->enabled) && $tag->enabled) {
      unset($tags[$key]);
    }
  }
  return $tags;
}

/**
 * Implements hook_block_view().
 *
 * @param string $delta
 * @return array
 */
function onscroll_block_view($delta = '') {
  $block = array();

  if (strpos($delta, 'onscroll') !== FALSE){
    // Block to position the onscroll ad.
      $block['content'] = '<div id="'. $delta .'_container"></div>' . str_replace("[delta]",$delta . '_container',ONSCROLL_PLACEHOLDER);
  }
  return $block;
}

/**
 * Implements hook_ctools_plugin_directory().
 *
 * @param $module
 * @param $type
 * @return string
 */
function onscroll_ctools_plugin_directory($module, $type) {
  // Load the export_ui plugin.
  if ($type == 'export_ui') {
    return 'plugins/export_ui';
  }
}
